buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
        jcenter()
    }
    dependencies {
        classpath 'gradle.plugin.nl.javadude.gradle.plugins:license-gradle-plugin:0.12.1'
        classpath "com.netflix.nebula:gradle-extra-configurations-plugin:2.2.2"
        classpath "com.gradle.publish:plugin-publish-plugin:0.9.1"
        classpath "org.ysb33r.gradle:gradletest:0.5.4"
    }
}

apply plugin: 'groovy'
apply plugin: 'com.github.hierynomus.license'
apply plugin : 'org.ysb33r.gradletest'
apply plugin : 'com.gradle.plugin-publish'

group 'org.ysb33r.gradle'
version '0.9'

sourceCompatibility = 1.7
plugins.withType(JavaPlugin) {
    project.tasks.withType(GroovyCompile) { task ->
        task.sourceCompatibility = project.sourceCompatibility
        task.targetCompatibility = project.targetCompatibility
    }
    project.tasks.withType(JavaCompile) { task ->
        task.sourceCompatibility = project.sourceCompatibility
        task.targetCompatibility = project.targetCompatibility
    }
}

repositories {
    jcenter()
}

ext {
    spockGroovyVer = GroovySystem.version.replaceAll(/\.\d+$/,'')
    mirahTestVer = '0.1.4'
    mirahTestRepo = "${buildDir}/test/mirahTestRepo"
}

configurations {
  mirahTesting
}

dependencies {
    compile localGroovy()
    compile gradleApi()
    testCompile ("org.spockframework:spock-core:1.0-groovy-${spockGroovyVer}") {
        exclude module : 'groovy-all'
    }

    mirahTesting "org.mirah:mirah:${mirahTestVer}"
    gradleTest "org.mirah:mirah:${mirahTestVer}"
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar) {
    description "An archive of the JavaDocs for Maven Central"
    classifier "javadoc"
    from javadoc
}

task prepareTestRepo( type : Copy ) {
    from configurations.mirahTesting
    into mirahTestRepo
}

test {
    dependsOn prepareTestRepo

    systemProperties TESTREPO : file(mirahTestRepo).absolutePath,
        TESTROOT : file("${buildDir}/test/mirah").absolutePath,
        TESTRESOURCES : file('src/test/resources/testcode').absolutePath

}

gradleTest {
    versions '2.0' ,'2.2', '2.3', '2.5', '2.8', '2.9', '2.10', '2.12'
}

check {
    finalizedBy gradleTest
}

license {
    header = rootProject.file('config/apache-header')
    strictCheck = true
    ignoreFailures = false
    mapping {
        groovy ='SLASHSTAR_STYLE'
        mirah = 'SCRIPT_STYLE'
    }
    ext.year = '2015'
    excludes(['**/*.ad', '**/*.asciidoc', '**/*.adoc', '**/*.md','**/*.properties', '**/*.txt', '**/*.bz2'])
}

artifacts {
    archives sourcesJar, javadocJar
}

pluginBundle {
    description = 'Mirah language plugin for Gradle'
    website     = 'https://github.com/ysb33r/mirah-gradle-plugin'
    vcsUrl      = 'https://github.com/ysb33r/mirah-gradle-plugin.git'

    tags = ['language','mirah']

    plugins {
        mirahPlugin {
            id = 'org.mirah.lang'
            displayName = 'Mirah language plugin'
        }
    }

    mavenCoordinates {
        groupId = project.group
        artifactId = archivesBaseName
    }

}

publishPlugins {
    onlyIf { !version.endsWith("SNAPSHOT") }
}
